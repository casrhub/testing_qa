name: Full Stack CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build and Start Spring Boot App
        run: |
          cd backend/spring-bootbackend
          mvn clean spring-boot:run &
          echo "Waiting 5 seconds for the server to start..."
          sleep 5
          attempt_counter=0
          max_attempts=5
          until $(curl --output /dev/null --silent --head --fail http://localhost:8080/math/add); do
            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Max attempts reached"
              exit 1
            fi
            printf '.'
            attempt_counter=$(($attempt_counter+1))
            sleep 5
          done
          echo "Server ready for testing"

      - name: Run Postman Integration Tests
        run: |
          npm install -g newman
          newman -v
          newman run src/test/integration/Calculator\ Postman.postman_collection.json

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-22.04

    container:
      image: node:20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Set up Chrome for testing
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120
          install-dependencies: true

      - name: Start test server
        run: |
          cd frontend
          npx http-server -p 8000 &
          sleep 10
          curl http://localhost:8000

      - name: Run Frontend Tests
        run: |
          cd frontend
          ./node_modules/.bin/mocha "**/*.spec.js"

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: frontend/screenshots/
